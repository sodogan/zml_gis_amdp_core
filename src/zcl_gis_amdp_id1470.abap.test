*"* use this source file for your ABAP unit test classes
*/**TESTING THE AMDP METHODS*/
CLASS ltcl_tester DEFINITION FOR TESTING
 INHERITING FROM zcl_gis_amdp_base_aunit
  RISK LEVEL HARMLESS.

  PUBLIC SECTION.
    METHODS: create_expectations  REDEFINITION.
    METHODS: clear_expectations REDEFINITION.

  PROTECTED SECTION.


  PRIVATE SECTION.
    METHODS  save_actual_block_for_insert FOR TESTING RAISING cx_static_check.
    METHODS  save_actual_block_wrong_action FOR TESTING RAISING cx_static_check.
    METHODS:setup, teardown.
    DATA: mo_cut TYPE REF TO zcl_gis_amdp_id1470.
    DATA: mt_mock_output_t   TYPE zprresponse_savetype_tab.
ENDCLASS.


CLASS ltcl_tester IMPLEMENTATION.
*******************************************************************************
** Please be aware that this method contains DB Manipulation(Insert/Delete)!
*******************************************************************************
  METHOD save_actual_block_for_insert.
    DATA: lt_actual_output_t   TYPE zprresponse_savetype_tab,
          lt_actual_geometries TYPE zpractual_geometrytype_tab.
**Please make sure that you enter the test input table actual geometries
    lt_actual_geometries = VALUE #(
     (
        actual_geometry_id = 1
        gps_quality = 1
        logging_form_code = 12
        geom = ''
        geometry =  '240377.48953756283 6820333.000411826'
        geom_type = |pP| " it is output parameter which will be set to 'Point' value
        variantname = |pP|
         ) ).

    TRY.
** Turn on the commit on
        toggle_commit_on(  ).

        mo_cut->save_actual_block(
          EXPORTING
            actual_block_order_id  = |1fdfd507-1b9f-4630-bbb7-59181d54525b|
            contract_id            = |1081100662|
            silvicultural_order_id = ''
            block_number           = 5
            action                 = 1
            actual_geometries      = lt_actual_geometries
          IMPORTING
            output_t               = lt_actual_output_t
        ).

**Make sure that data is returned back
**This should raise exception and the error message should be filled
        assert_true( act = abap_true ).

**Make sure that it contains the data right!
        DATA(ls_line) =  VALUE #( mt_mock_output_t[ contract_id  = |1081100662| ] ).
        cl_abap_unit_assert=>assert_table_contains( table = lt_actual_output_t line = ls_line msg = | Should pass| ).


** Turn on the commit off
        toggle_commit_off(  ).
      CATCH cx_root INTO DATA(lo_exception).
        fail_test( |Exception: { lo_exception->get_text(  ) }  | ).
    ENDTRY.
  ENDMETHOD.

*******************************************************************************
** Please be aware that this method contains DB Manipulation(Insert/Delete)!
** This should be raising exceptiona and it not then its a failue
*******************************************************************************
  METHOD save_actual_block_wrong_action.
    DATA: lt_actual_output_t   TYPE zprresponse_savetype_tab,
          lt_actual_geometries TYPE zpractual_geometrytype_tab.
**Please make sure that you enter the test input table actual geometries
    lt_actual_geometries = VALUE #(
    (
    actual_geometry_id = 1
    gps_quality = 1
    logging_form_code = 12
    geom = ''
    geometry =  '240377.48953756283 6820333.000411826'
    geom_type = |pP|
    variantname = |pP|
     ) ).

    TRY.
        mo_cut->save_actual_block(
          EXPORTING
            actual_block_order_id  = |1233|
            contract_id            = |1081100662|
            silvicultural_order_id = ''
            block_number           = 5
            action                 = 3"Wrong action
            actual_geometries      = lt_actual_geometries
          IMPORTING
            output_t               = lt_actual_output_t
        ).

**This should raise exception and never reach here
        fail_test( |The test should fail and never reach here  | ).


      CATCH cx_root INTO DATA(lo_exception).
        assert_true( act = abap_true ).
        assert_table_lines( act = lt_actual_output_t exp = 0 msg = 'The output table should be empty' ).
    ENDTRY.
  ENDMETHOD.



  METHOD setup.
    TRY.
        mo_cut =  CAST zcl_gis_amdp_id1470( zcl_gis_amdp_base=>get_instance( iv_id = '1470'  ) ).
*load the expectations
       create_expectations(  ).

      CATCH cx_root INTO DATA(lo_exception).
        cl_abap_unit_assert=>fail( 'Set up  has failed' ).
    ENDTRY.
  ENDMETHOD.

  METHOD teardown.
    CLEAR: mo_cut.
  ENDMETHOD.

  METHOD clear_expectations.
   clear: mt_mock_output_t.
  ENDMETHOD.

  METHOD create_expectations.
  INSERT VALUE #(   actual_block_order_id  = '1fdfd507-1b9f-4630-bbb7-59181d54525b'
                   contract_id = '1081100662'
                   block_number = 5
                   silvicultural_order_id = 0
                     ) INTO TABLE mt_mock_output_t.
  ENDMETHOD.

ENDCLASS.